/************ Add: Sequences ***************/

/* Autogenerated Sequences */

CREATE SEQUENCE public.editorial_id_editorial_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.editorial_id_editorial_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE public.libros_id_libro_stock_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.libros_id_libro_stock_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE public.perfiles_id_perfil_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.perfiles_id_perfil_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE public.reserva_id_reserva_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.reserva_id_reserva_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE public.reserva_has_libros_cantidad_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.reserva_has_libros_cantidad_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE public.seccion_id_seccion_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.seccion_id_seccion_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE public.seguimiento_id_seguimiento_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.seguimiento_id_seguimiento_seq IS 'DbWrench Autogenerated Sequence.';

CREATE SEQUENCE public.usuarios_id_usuario_seq INCREMENT BY 1 START 1;
COMMENT ON SEQUENCE public.usuarios_id_usuario_seq IS 'DbWrench Autogenerated Sequence.';




/************ Update: Tables ***************/

/******************** Add Table: public.editorial ************************/

/* Build Table Structure */
CREATE TABLE public.editorial
(
	id_editorial INTEGER DEFAULT nextval('public.editorial_id_editorial_seq'::regclass) NOT NULL,
	nombre_editor VARCHAR(50) NOT NULL,
	pais VARCHAR NOT NULL
);

/* Add Primary Key */
ALTER TABLE public.editorial ADD CONSTRAINT pkeditorial
	PRIMARY KEY (id_editorial);


/******************** Add Table: public.libros ************************/

/* Build Table Structure */
CREATE TABLE public.libros
(
	id_libro INTEGER DEFAULT nextval('public.libros_id_libro_stock_seq'::regclass) NOT NULL,
	titulo VARCHAR(100) NOT NULL,
	autor VARCHAR(50) NULL,
	fecha_publicacion INTEGER NOT NULL,
	paginas INTEGER NOT NULL,
	idioma VARCHAR(25) NOT NULL,
	stock INTEGER DEFAULT nextval('public.libros_id_libro_stock_seq'::regclass) NULL,
	id_seccion INTEGER NULL,
	id_editorial INTEGER NULL
);

/* Add Primary Key */
ALTER TABLE public.libros ADD CONSTRAINT pklibros
	PRIMARY KEY (id_libro);


/******************** Add Table: public.perfiles ************************/

/* Build Table Structure */
CREATE TABLE public.perfiles
(
	id_perfil INTEGER DEFAULT nextval('public.perfiles_id_perfil_seq'::regclass) NOT NULL,
	nombre_perfil VARCHAR(25) NOT NULL,
	descripcion_perfil VARCHAR(50) NOT NULL,
	id_usuario INTEGER NULL
);

/* Add Primary Key */
ALTER TABLE public.perfiles ADD CONSTRAINT pkperfiles
	PRIMARY KEY (id_perfil);


/******************** Add Table: public.reserva ************************/

/* Build Table Structure */
CREATE TABLE public.reserva
(
	id_reserva INTEGER DEFAULT nextval('public.reserva_id_reserva_seq'::regclass) NOT NULL,
	id_libro INTEGER NULL,
	id_usuario INTEGER NULL
);

/* Add Primary Key */
ALTER TABLE public.reserva ADD CONSTRAINT pkreserva
	PRIMARY KEY (id_reserva);


/******************** Add Table: public.reserva_has_libros ************************/

/* Build Table Structure */
CREATE TABLE public.reserva_has_libros
(
	cantidad INTEGER DEFAULT nextval('public.reserva_has_libros_cantidad_seq'::regclass) NOT NULL,
	id_reserva INTEGER NULL,
	id_libro INTEGER NULL
);


/******************** Add Table: public.seccion ************************/

/* Build Table Structure */
CREATE TABLE public.seccion
(
	id_seccion INTEGER DEFAULT nextval('public.seccion_id_seccion_seq'::regclass) NOT NULL,
	nombre_seccion VARCHAR(50) NOT NULL
);

/* Add Primary Key */
ALTER TABLE public.seccion ADD CONSTRAINT pkseccion
	PRIMARY KEY (id_seccion);


/******************** Add Table: public.seguimiento ************************/

/* Build Table Structure */
CREATE TABLE public.seguimiento
(
	id_seguimiento INTEGER DEFAULT nextval('public.seguimiento_id_seguimiento_seq'::regclass) NOT NULL,
	id_reserva INTEGER NULL,
	fecha_reserva TIMESTAMP NOT NULL,
	fecha_devolucion TIMESTAMP NOT NULL
);

/* Add Primary Key */
ALTER TABLE public.seguimiento ADD CONSTRAINT pkseguimiento
	PRIMARY KEY (id_seguimiento);


/******************** Add Table: public.usuarios ************************/

/* Build Table Structure */
CREATE TABLE public.usuarios
(
	id_usuario INTEGER DEFAULT nextval('public.usuarios_id_usuario_seq'::regclass) NOT NULL,
	nickname VARCHAR(25) NOT NULL,
	name VARCHAR(50) NOT NULL,
	email VARCHAR(25) NOT NULL,
	password VARCHAR(25) NOT NULL,
	id_perfil INTEGER NULL
);

/* Add Primary Key */
ALTER TABLE public.usuarios ADD CONSTRAINT pkusuarios
	PRIMARY KEY (id_usuario);





/************ Add Foreign Keys ***************/

/* Add Foreign Key: fk_libros_editorial */
ALTER TABLE public.libros ADD CONSTRAINT fk_libros_editorial
	FOREIGN KEY (id_editorial) REFERENCES public.editorial (id_editorial)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_libros_seccion */
ALTER TABLE public.libros ADD CONSTRAINT fk_libros_seccion
	FOREIGN KEY (id_seccion) REFERENCES public.seccion (id_seccion)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_perfiles_usuarios */
ALTER TABLE public.perfiles ADD CONSTRAINT fk_perfiles_usuarios
	FOREIGN KEY (id_usuario) REFERENCES public.usuarios (id_usuario)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_reserva_usuarios */
ALTER TABLE public.reserva ADD CONSTRAINT fk_reserva_usuarios
	FOREIGN KEY (id_usuario) REFERENCES public.usuarios (id_usuario)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_reserva_has_libros_libros */
ALTER TABLE public.reserva_has_libros ADD CONSTRAINT fk_reserva_has_libros_libros
	FOREIGN KEY (id_libro) REFERENCES public.libros (id_libro)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_reserva_has_libros_reserva */
ALTER TABLE public.reserva_has_libros ADD CONSTRAINT fk_reserva_has_libros_reserva
	FOREIGN KEY (id_reserva) REFERENCES public.reserva (id_reserva)
	ON UPDATE NO ACTION ON DELETE NO ACTION;

/* Add Foreign Key: fk_seguimiento_reserva */
ALTER TABLE public.seguimiento ADD CONSTRAINT fk_seguimiento_reserva
	FOREIGN KEY (id_reserva) REFERENCES public.reserva (id_reserva)
	ON UPDATE NO ACTION ON DELETE NO ACTION;
